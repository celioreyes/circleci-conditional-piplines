version: 2.1

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  accounts:
    type: boolean
    default: false
  inventory:
    type: boolean
    default: false
  products:
    type: boolean
    default: false
  reviews:
    type: boolean
    default: false
  gateway:
    type: boolean
    default: false

executors:
  node:
    docker:
      - image: circleci/node

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  build:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/project/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      # This step is added only to show that we are in the package directory
      - run:
          name: Content
          command: |
            cat README.md 
            echo "<< parameters.package_name >> built." > build.txt
      - run:
          name: Build
          command: echo "Build << parameters.package_name >> ..."
      - persist_to_workspace:
          root: ~/project
          paths:
            - << parameters.package_name >>

  deploy:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/project/<< parameters.package_name >>

    steps:
      - attach_workspace:
          at: ~/project
      # This step is added to show that files are available from the build job.
      - run:
          name: Content to deploy
          command: ls && cat build.txt
      - deploy:
          name: Deploy
          command: echo "Deploying << parameters.package_name >> ..."

workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  # Workflows defined for each package.
  accounts:
    when: << pipeline.parameters.accounts >>
    jobs:
      - build:
          name: accounts-build
          package_name: accounts
      - deploy:
          name: accounts-deploy
          package_name: accounts
          requires:
            - accounts-build

  inventory:
    when: << pipeline.parameters.inventory >>
    jobs:
      - build:
          name: inventory-build
          package_name: inventory
      - deploy:
          name: inventory-deploy
          package_name: inventory
          requires:
            - inventory-build

  products:
    when: << pipeline.parameters.products >>
    jobs:
      - build:
          name: products-build
          package_name: products
      - deploy:
          name: products-deploy
          package_name: products
          requires:
            - products-build

  reviews:
    when: << pipeline.parameters.accounts >>
    jobs:
      - build:
          name: reviews-build
          package_name: reviews

  gateway:
    when: << pipeline.parameters.gateway >>
    jobs:
      - build:
          name: gateway-build
          package_name: gateway
      - deploy:
          name: gateway-deploy
          package_name: gateway
          requires:
            - gateway-build
